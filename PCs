# The following code to create a dataframe and remove duplicated rows is always executed and acts as a preamble for your script: 

# dataset = pandas.DataFrame(ActivePower, WindSpeed, ActivePower.1, WindSpeed.1, OemModel, HMI_StatusTxt)
# dataset = dataset.drop_duplicates()

# Paste or type your script code here:

import matplotlib.pyplot as plt
from matplotlib.pyplot import figure

figure(figsize=(20, 12), dpi=72)
plt.rcParams.update({'font.size': 25})

# dataset.loc[-1] = [0, 0, 689, 30, 0]

df_avail = dataset[dataset['HMI_StatusTxt']=='AVAILABLE']
df_error = dataset[dataset['HMI_StatusTxt']=='ERROR']
df_maint = dataset[dataset['HMI_StatusTxt']=='MIANTENANCE']


pc_e48 = {
    0.0: 0.0, 0.5: 0.0, 1.0: 0.0, 1.5: 0.0, 2.0: 0.0, 2.5: 2.5, 3.0: 5.0, 3.5: 15.0, 4.0: 25.0, 4.5: 42.5, 
    5.0: 60.0, 5.5: 85.0, 6.0: 110.0, 6.5: 145.0, 7.0: 180.0, 7.5: 227.5, 8.0: 275.0, 8.5: 337.5, 9.0: 400.0, 
    9.5: 477.5, 10.0: 555.0, 10.5: 613.0, 11.0: 671.0, 11.5: 710.5, 12.0: 750.0, 12.5: 770.0, 13.0: 790.0, 
    13.5: 800.0, 14.0: 810.0, 14.5: 810.0, 15.0: 810.0, 15.5: 810.0, 16.0: 810.0, 16.5: 810.0, 17.0: 810.0, 
    17.5: 810.0, 18.0: 810.0, 18.5: 810.0, 19.0: 810.0, 19.5: 810.0, 20.0: 810.0, 20.5: 810.0, 21.0: 810.0, 
    21.5: 810.0, 22.0: 810.0, 22.5: 810.0, 23.0: 810.0, 23.5: 810.0, 24.0: 810.0, 24.5: 810.0, 25.0: 810.0, 
    25.5: 797.92, 26.0: 785.83, 26.5: 773.75, 27.0: 761.67, 27.5: 749.58, 28.0: 737.5, 28.5: 725.42, 
    29.0: 713.33, 29.5: 701.25, 30.0: 689.17
    }

pc_e70 = {
    0.0: 0.0, 0.5: 0.0, 1.0: 0.0, 1.5: 0.9, 2.0: 2.0, 2.5: 9.2, 3.0: 18.0, 3.5: 35.1, 4.0: 56.0, 4.5: 87.95, 
    5.0: 127.0, 5.5: 177.85, 6.0: 240.0, 6.5: 312.0, 7.0: 400.0, 7.5: 501.7, 8.0:  626.0, 8.5: 745.7, 9.0: 892.0, 
    9.5: 1040.95, 10.0: 1223.0, 10.5: 1388.15, 11.0: 1590.0, 11.5: 1729.5, 12.0: 1900.0, 12.5: 1981.0, 13.0: 2080.0, 
    13.5: 2147.5, 14.0: 2230.0, 14.5: 2261.5, 15.0: 2300.0, 15.5: 2304.5, 16.0: 2310.0, 16.5: 2310.0, 17.0: 2310.0, 
    17.5: 2310.0, 18.0: 2310.0, 18.5: 2310.0, 19.0: 2310.0, 19.5: 2310.0, 20.0: 2310.0, 20.5: 2310.0, 21.0: 2310.0, 
    21.5: 2310.0, 22.0: 2310.0, 22.5: 2310.0, 23.0: 2310.0, 23.5: 2310.0, 24.0: 2310.0, 24.5: 2310.0, 25.0: 2310.0, 
    25.5: 0.0, 26.0: 0.0, 26.5: 0.0, 27.0: 0.0, 27.5: 0.0, 28.0: 0.0, 28.5: 0.0, 29.0: 0.0, 29.5: 0.0, 30.0: 0.0
    }

def plot_PC(pc, lw=4):
    df = pandas.DataFrame(pc, index=[0]).T
    df.reset_index(inplace=True)
    df = df.rename(columns = {'index':'WS', 0:'AP'})
    plt.plot(df['WS'], df['AP'], lw=lw, c='b', label='Theoretical hardcoded')

dataset = dataset.sort_values(by='WindSpeed.1')
unique_oem = dataset.OemModel.unique()
colors = ['b', 'lime', 'k', 'b', 'c', 'm', 'r'][:len(unique_oem)]
aaa = []
pcs = [pc_e70, pc_e48]
for pc, oem, c in zip(pcs, unique_oem, colors):
    df = dataset[dataset.OemModel==oem]
    if len(df)>0:
        if oem=='E48/800KW':
           plot_PC(pc_e48)
        elif oem=='E70/2300KW':
           plot_PC(pc_e70)
        # plt.plot(df['WindSpeed.1'], df['ActivePower.1'], lw=3, c=c, label=oem)



plt.scatter(df_avail['WindSpeed'], df_avail['ActivePower'], c='g', s=5, label='AVAILABLE')
plt.scatter(df_error['WindSpeed'], df_error['ActivePower'], c='r', s=50, label='ERROR')
plt.scatter(df_maint['WindSpeed'], df_maint['ActivePower'], c='orange', s=50, label='MAINTENANCE')

# dataset = dataset[['WindSpeed.1', 'ActivePower.1']]
# plt.plot(dataset['WindSpeed.1'], dataset['ActivePower.1'], lw=3, c='b', label='THEORICAL')

plt.xlim([0, 30])
plt.legend(loc=2, prop={'size': 20})
plt.title(f"Theoretical vs Empirical POWER CURVES {oem}")
plt.tight_layout()
plt.show()
